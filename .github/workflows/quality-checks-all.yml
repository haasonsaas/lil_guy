name: Comprehensive Quality Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Run TypeScript checks
        run: bun run typecheck
      
      - name: Run ESLint
        run: bun run lint
      
      - name: Check Prettier formatting
        run: bun run prettier:check
      
      - name: Run Markdown linting
        run: bun run lint:md
        continue-on-error: true
      
      - name: Run spell check
        run: bun run spell
        continue-on-error: true
      
      - name: Validate SEO
        run: bun run validate:seo
        continue-on-error: true
      
      - name: Check bundle size
        run: bun run check:deploy
        continue-on-error: true
      
      - name: Run all checks summary
        run: bun run check:all
        if: always()
      
      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `
            ## üîç Quality Check Results
            
            | Check | Status |
            |-------|--------|
            | TypeScript | ${{ steps.typecheck.outcome == 'success' && '‚úÖ' || '‚ùå' }} |
            | ESLint | ${{ steps.lint.outcome == 'success' && '‚úÖ' || '‚ùå' }} |
            | Prettier | ${{ steps.prettier.outcome == 'success' && '‚úÖ' || '‚ùå' }} |
            | Markdown Lint | ${{ steps.markdown.outcome == 'success' && '‚úÖ' || '‚ö†Ô∏è' }} |
            | Spell Check | ${{ steps.spell.outcome == 'success' && '‚úÖ' || '‚ö†Ô∏è' }} |
            | SEO Validation | ${{ steps.seo.outcome == 'success' && '‚úÖ' || '‚ö†Ô∏è' }} |
            | Bundle Size | ${{ steps.bundle.outcome == 'success' && '‚úÖ' || '‚ö†Ô∏è' }} |
            
            > ‚úÖ Required checks | ‚ö†Ô∏è Optional checks with warnings
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });