name: Deploy Preview

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    name: Deploy Preview to Cloudflare Pages
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run type check
        run: bun run typecheck

      - name: Run linting
        run: bun run lint

      - name: Build project
        run: bun run build
        env:
          VITE_RESEND_API_KEY: ${{ secrets.VITE_RESEND_API_KEY }}
          VITE_EMAIL_TO: ${{ secrets.VITE_EMAIL_TO }}
          VITE_EMAIL_FROM: ${{ secrets.VITE_EMAIL_FROM }}

      - name: Run deployment health check
        run: bun run check:deploy

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        id: deploy
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Preview deployment')
            );

            const commentBody = `## ðŸš€ Preview deployment ready!

            **Preview URL:** ${{ steps.deploy.outputs.url }}
            **Deployment ID:** ${{ steps.deploy.outputs.id }}
            **Environment:** \`preview-${{ github.event.number }}\`

            ### âœ… Checks passed:
            - TypeScript compilation
            - ESLint validation  
            - Build successful
            - Deployment health check

            ---
            *This preview will be automatically deleted when the PR is merged or closed.*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

      - name: Update PR status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const description = state === 'success' 
              ? 'Preview deployment successful' 
              : 'Preview deployment failed';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: state,
              target_url: '${{ steps.deploy.outputs.url }}',
              description: description,
              context: 'deploy/preview'
            });